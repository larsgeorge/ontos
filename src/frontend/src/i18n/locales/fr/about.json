{
  "title": "À propos d'Ontos",
  "intro": "Cette application fonctionne comme une application Databricks et fournit Unity Catalog ainsi que des services connexes axés sur la gestion des métadonnées, la gouvernance et les outils opérationnels.",
  "coreFeatures": "Fonctionnalités principales",
  "noFeatures": "Aucune fonctionnalité disponible pour les aperçus de fonctionnalités sélectionnés.",
  "techStack": "Stack technologique",
  "stack": {
    "frontend": { "title": "Frontend", "desc": "React, TypeScript, Shadcn UI, Tailwind CSS, Vite" },
    "backend": { "title": "Backend", "desc": "Python, FastAPI" },
    "database": { "title": "Base de données", "desc": "PostgreSQL" },
    "platform": { "title": "Plateforme", "desc": "Databricks Apps" }
  },
  "learnMore": "Contribuer et en savoir plus",
  "cta": {
    "github": "Voir sur GitHub",
    "docs": "Lire la documentation"
  },
  "details": {
    "data-domains": [
      "• Définir et gérer les domaines de données, sous-domaines et structures de propriété.",
      "• Visualiser les relations entre les domaines et les produits de données dépendants.",
      "• Attribuer des actifs et des produits aux domaines pour une responsabilité plus claire.",
      "• Suit le standard BITOL Open Data Domain Standard (ODDS)."
    ],
    "data-contracts": [
      "• Instrumenter les produits de données avec des métadonnées techniques basées sur l'Open Data Contract Standard (ODCS).",
      "• Validation de schéma, contrôles de qualité, vérification du contrôle d'accès, affichage de données d'exemple.",
      "• Les contrats peuvent être textuels (par ex., JSON/YAML) ; supporte le schéma JSON BITOL ODCS."
    ],
    "data-products": [
      "• Regrouper les actifs Databricks (tables, vues, fonctions, modèles, tableaux de bord, jobs, notebooks).",
      "• Utiliser des tags (par ex., data-product-name, data-product-domain)."
    ],
    "semantic-models": [
      "• Glossaires hiérarchiques par unité organisationnelle (entreprise, LOB, département, équipe, projet).",
      "• Fusionnés de bas en haut pour les utilisateurs, permettant des remplacements.",
      "• Les termes ont des tags, descriptions markdown, statut du cycle de vie, actifs assignés."
    ],
    "master-data": [
      "• Intégration avec Zingg.ai pour les capacités MDM."
    ],
    "compliance": [
      "• Définir et vérifier les règles de conformité.",
      "• Calculer un score de conformité global."
    ],
    "estate-manager": [
      "• Vue centralisée de plusieurs workspaces.",
      "• Surveiller l'utilisation des ressources et les coûts.",
      "• Gérer les configurations entre les estates."
    ],
    "security": [
      "• Activer les fonctionnalités de sécurité avancées (par ex., confidentialité différentielle) sur les actifs."
    ],
    "entitlements": [
      "• Définir des personas réutilisables (par ex., Analyste, Ingénieur).",
      "• Attribuer des personas aux groupes Databricks.",
      "• Simplifier la gestion des privilèges à grande échelle."
    ],
    "entitlements-sync": [
      "• Maintenir les droits alignés avec les systèmes externes (par ex., IDP).",
      "• Détecter et résoudre les conflits de synchronisation.",
      "• Maintenir les journaux d'audit de tous les changements."
    ],
    "catalog-commander": [
      "• Explorateur à deux panneaux inspiré de Norton Commander pour gérer les actifs du catalogue.",
      "• Copier/déplacer facilement les tables et schémas."
    ],
    "data-asset-reviews": [
      "• Flux de travail pour examiner et approuver les actifs (tables, vues, fonctions).",
      "• Inclut des notifications pour les réviseurs et les demandeurs."
    ]
  }
}
