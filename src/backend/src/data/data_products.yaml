# ODPS v1.0.0 Demo Data Products
# Retail Sales Optimization Example Chain

# --- 1. Source Product: POS Transactions ---
- apiVersion: "v1.0.0"
  kind: "DataProduct"
  id: "retail-pos-source-v1"
  status: "active"
  name: "POS Transaction Stream v1"
  version: "1.0.0"
  domain: "Retail Operations"
  tenant: "retail-demo"
  description:
    purpose: "Provide real-time point-of-sale transaction data from store systems for downstream analytics and operational use cases."
    usage: "Consume this stream for real-time fraud detection, inventory tracking, or as a foundation for prepared analytics datasets."
    limitations: "Raw data format may contain system-specific codes. Some transactions may have delayed timestamps."
  inputPorts: [] # Source product has no inputs
  outputPorts:
    - name: "POS Kafka Stream"
      version: "1.0.0"
      description: "Real-time feed of raw POS transaction events"
      type: "kafka"
      status: "active"
      server:
        host: "kafka.example.com"
        topic: "pos-transactions-raw-v1"
      tags:
        - "kafka"
        - "realtime"
        - "pos"
        - "raw"
  managementPorts:
    - name: "pos-observability"
      content: "observability"
      type: "rest"
      url: "https://observability.example.com/pos-source/metrics"
      description: "Prometheus metrics for stream health and throughput"
  support:
    - channel: "pos-stream-support"
      url: "https://slack.com/channels/pos-stream-support"
      tool: "slack"
      scope: "interactive"
      description: "24/7 support channel for POS stream issues"
  team:
    name: "Data Engineering"
    members:
      - username: "eng-lead@example.com"
        name: "Alice Engineer"
        role: "owner"
  tags:
    - "source"
    - "pos"
    - "transactions"
    - "v1"
  authoritativeDefinitions:
    - type: "businessDefinition"
      url: "https://wiki.example.com/systems/pos-system"
      description: "POS system documentation"

# --- 2. Source-Aligned Product: Prepared Sales Transactions ---
- apiVersion: "v1.0.0"
  kind: "DataProduct"
  id: "retail-sales-prepared-v1"
  status: "active"
  name: "Prepared Sales Transactions v1"
  version: "1.0.0"
  domain: "Retail Analytics"
  tenant: "retail-demo"
  description:
    purpose: "Provide cleaned, validated, and standardized sales transaction data ready for analytics consumption."
    usage: "Use for BI reporting, demand forecasting, customer analytics, and other downstream analytical use cases."
    limitations: "Data is batch-processed with 1-hour lag. PII fields are masked according to data governance policies."
  inputPorts:
    - name: "Raw POS Stream"
      version: "1.0.0"
      contractId: "pos-transaction-contract-v1"
      tags:
        - "pos"
        - "raw"
  outputPorts:
    - name: "prepared_sales_delta"
      version: "1.0.0"
      description: "Delta table containing cleaned sales transactions"
      type: "table"
      status: "active"
      contractId: "prepared-sales-contract-v1"
      server:
        location: "s3://data-lake/prepared/retail/sales/v1"
        format: "delta"
      containsPii: true
      tags:
        - "delta"
        - "s3"
        - "prepared"
        - "sales"
        - "pii"
  managementPorts:
    - name: "data-quality-dashboard"
      content: "observability"
      type: "rest"
      url: "https://dq.example.com/dash/prepared-sales-v1"
      description: "Great Expectations data quality dashboard"
  support:
    - channel: "prepared-data-support"
      url: "https://slack.com/channels/prepared-data-support"
      tool: "slack"
      scope: "issues"
  team:
    name: "Data Engineering"
    members:
      - username: "eng-lead@example.com"
        name: "Alice Engineer"
        role: "owner"
      - username: "data-steward@example.com"
        name: "Bob Steward"
        role: "data steward"
  tags:
    - "prepared"
    - "sales"
    - "transactions"
    - "analytics-ready"
    - "v1"
  authoritativeDefinitions:
    - type: "transformationImplementation"
      url: "https://jobs.example.com/jobs/prepare-sales-v1"
      description: "ETL job implementation"

# --- 3. Aggregate Product: Demand Forecasting ---
- apiVersion: "v1.0.0"
  kind: "DataProduct"
  id: "retail-demand-forecast-v1"
  status: "active"
  name: "Demand Forecast Model Output v1"
  version: "1.0.0"
  domain: "Retail Analytics"
  tenant: "retail-demo"
  description:
    purpose: "Provide predicted demand for products at various locations based on historical sales and external factors."
    usage: "Use for inventory planning, supply chain optimization, and promotional planning."
    limitations: "Forecasts are updated daily. Accuracy degrades beyond 30-day horizon. External factors like holidays may require manual adjustment."
  inputPorts:
    - name: "Prepared Sales Data"
      version: "1.0.0"
      contractId: "prepared-sales-contract-v1"
      tags:
        - "sales"
        - "prepared"
  outputPorts:
    - name: "demand_forecast_table"
      version: "1.0.0"
      description: "Delta table containing product demand forecasts"
      type: "table"
      status: "active"
      contractId: "demand-forecast-contract-v1"
      server:
        location: "s3://data-analytics/retail/forecast/v1"
        format: "delta"
      tags:
        - "delta"
        - "s3"
        - "forecast"
        - "predictive"
  managementPorts:
    - name: "model-monitoring"
      content: "observability"
      type: "rest"
      url: "https://mlflow.example.com/models/demand-forecast-v1"
      description: "MLflow model monitoring and metrics"
  support:
    - channel: "ml-support"
      url: "https://teams.com/channels/ml-support"
      tool: "teams"
      scope: "interactive"
  team:
    name: "Analytics Team"
    members:
      - username: "ml-lead@example.com"
        name: "Charlie ML"
        role: "owner"
      - username: "data-scientist@example.com"
        name: "Dana Scientist"
        role: "contributor"
  tags:
    - "forecasting"
    - "demand"
    - "analytics"
    - "ml"
    - "v1"
  authoritativeDefinitions:
    - type: "implementation"
      url: "https://notebooks.example.com/models/demand-forecast-v1"
      description: "Model training notebook"
    - type: "businessDefinition"
      url: "https://models.example.com/cards/demand-forecast-v1"
      description: "Model card with business context"

# --- 4. Consumer-Aligned Product: Inventory Optimization ---
- apiVersion: "v1.0.0"
  kind: "DataProduct"
  id: "retail-inventory-optim-v1"
  status: "active"
  name: "Inventory Optimization Recommendations v1"
  version: "1.0.0"
  domain: "Supply Chain"
  tenant: "retail-demo"
  description:
    purpose: "Provide automated inventory reordering recommendations based on demand forecasts and current stock levels."
    usage: "API consumed by inventory management system to trigger automated reorders. Review recommendations in dashboard before approval."
    limitations: "Recommendations assume lead times from supplier contracts. Manual override required for new products or discontinued items."
  inputPorts:
    - name: "Demand Forecast Data"
      version: "1.0.0"
      contractId: "demand-forecast-contract-v1"
      tags:
        - "forecast"
  outputPorts:
    - name: "Inventory Reorder API"
      version: "1.0.0"
      description: "API endpoint consumed by inventory management system to trigger reorders"
      type: "api"
      status: "active"
      server:
        location: "https://api.example.com/inventory/reorder/v1"
      autoApprove: false
      tags:
        - "api"
        - "inventory"
        - "reorder"
        - "action"
  managementPorts:
    - name: "api-monitoring"
      content: "observability"
      type: "rest"
      url: "https://api-metrics.example.com/inventory-optim"
      description: "API performance and error rate monitoring"
    - name: "data-dictionary"
      content: "dictionary"
      type: "rest"
      url: "https://docs.example.com/api/inventory-optim/v1"
      description: "OpenAPI specification and data dictionary"
  support:
    - channel: "inventory-ops-support"
      url: "https://jira.example.com/projects/INV"
      tool: "ticket"
      scope: "issues"
      description: "JIRA project for inventory optimization issues"
  team:
    name: "Operations Team"
    members:
      - username: "ops-lead@example.com"
        name: "Eve Operations"
        role: "owner"
  tags:
    - "inventory"
    - "optimization"
    - "supply-chain"
    - "recommendations"
    - "v1"

# --- 5. Aggregate Product: Price Optimization ---
- apiVersion: "v1.0.0"
  kind: "DataProduct"
  id: "retail-price-optim-v1"
  status: "active"
  name: "Price Optimization Model Output v1"
  version: "1.0.0"
  domain: "Retail Analytics"
  tenant: "retail-demo"
  description:
    purpose: "Provide data-driven pricing recommendations based on demand elasticity, competitive positioning, and customer behavior."
    usage: "Review recommendations weekly and apply to pricing systems via bulk import. Use sensitivity analysis for strategic items."
    limitations: "Model excludes promotional pricing. Recommendations should be reviewed by category managers before implementation."
  inputPorts:
    - name: "Demand Forecast Data"
      version: "1.0.0"
      contractId: "demand-forecast-contract-v1"
    - name: "Competitor Pricing Feed"
      version: "1.0.0"
      contractId: "competitor-pricing-contract-v1"
      tags:
        - "external"
        - "competitor"
        - "pricing"
  outputPorts:
    - name: "price_recommendations_table"
      version: "1.0.0"
      description: "Delta table containing optimal price recommendations with confidence intervals"
      type: "table"
      status: "active"
      contractId: "price-recommendations-contract-v1"
      server:
        location: "s3://data-analytics/retail/pricing/v1"
        format: "delta"
      tags:
        - "delta"
        - "s3"
        - "pricing"
        - "recommendations"
  support:
    - channel: "pricing-team"
      url: "https://slack.com/channels/pricing-team"
      tool: "slack"
      scope: "interactive"
  team:
    name: "Analytics Team"
    members:
      - username: "pricing-analyst@example.com"
        name: "Frank Analyst"
        role: "owner"
  tags:
    - "pricing"
    - "optimization"
    - "analytics"
    - "ml"
    - "v1"

# --- 6. Consumer-Aligned Product: Personalized Marketing ---
- apiVersion: "v1.0.0"
  kind: "DataProduct"
  id: "retail-customer-recs-v1"
  status: "active"
  name: "Customer Marketing Recommendations v1"
  version: "1.0.0"
  domain: "Marketing"
  tenant: "retail-demo"
  description:
    purpose: "Provide targeted customer segments and personalized product recommendations for marketing campaigns."
    usage: "Export customer lists weekly for email campaigns. Use real-time API for website personalization."
    limitations: "Contains PII - restricted access. Email frequency caps applied per GDPR. Opt-out customers excluded automatically."
  inputPorts:
    - name: "Prepared Sales Data"
      version: "1.0.0"
      contractId: "prepared-sales-contract-v1"
    - name: "Customer Profile Data"
      version: "1.0.0"
      contractId: "customer-profile-contract-v1"
      tags:
        - "crm"
        - "customer"
  outputPorts:
    - name: "marketing_campaign_list"
      version: "1.0.0"
      description: "CSV file containing customer IDs and recommended campaign details"
      type: "file"
      status: "active"
      server:
        location: "s3://data-marketing/retail/campaigns/v1/targets.csv"
        format: "csv"
      containsPii: true
      tags:
        - "csv"
        - "s3"
        - "marketing"
        - "campaign"
        - "target-list"
  support:
    - channel: "marketing-ops"
      url: "https://slack.com/channels/marketing-ops"
      tool: "slack"
      scope: "announcements"
      description: "Campaign launch announcements and coordination"
  team:
    name: "Marketing Team"
    members:
      - username: "marketing-lead@example.com"
        name: "Grace Marketing"
        role: "owner"
  tags:
    - "marketing"
    - "recommendations"
    - "personalization"
    - "customer"
    - "v1"

# --- 7. Consumer-Aligned Product: BI Dashboard Data ---
- apiVersion: "v1.0.0"
  kind: "DataProduct"
  id: "retail-performance-dashboard-v1"
  status: "active"
  name: "Retail Performance Dashboard Data v1"
  version: "1.0.0"
  domain: "Retail Analytics"
  tenant: "retail-demo"
  description:
    purpose: "Provide aggregated, denormalized data optimized for executive-level retail performance dashboards."
    usage: "Connect BI tools directly via provided connection string. Data refreshes nightly at 2 AM EST."
    limitations: "Historical data limited to 2 years rolling window. Custom KPIs require data team support."
  inputPorts:
    - name: "Prepared Sales Data"
      version: "1.0.0"
      contractId: "prepared-sales-contract-v1"
    - name: "Demand Forecast Data"
      version: "1.0.0"
      contractId: "demand-forecast-contract-v1"
    - name: "Inventory Snapshot"
      version: "1.0.0"
      contractId: "inventory-snapshot-contract-v1"
  outputPorts:
    - name: "BI Tool Connection"
      version: "1.0.0"
      description: "Direct connection endpoint for BI tool consumption"
      type: "dashboard"
      status: "active"
      server:
        location: "https://bi.example.com/dashboards/retail-perf-v1"
      tags:
        - "dashboard"
        - "tableau"
        - "powerbi"
        - "reporting"
  managementPorts:
    - name: "dashboard-url"
      content: "discoverability"
      type: "rest"
      url: "https://bi.example.com/dashboards/retail-perf-v1"
      description: "Link to interactive dashboard"
  support:
    - channel: "bi-support"
      url: "https://teams.com/channels/bi-support"
      tool: "teams"
      scope: "interactive"
  team:
    name: "Analytics Team"
    members:
      - username: "bi-dev@example.com"
        name: "Henry BI"
        role: "owner"
  tags:
    - "bi"
    - "reporting"
    - "dashboard"
    - "kpi"
    - "v1"
  authoritativeDefinitions:
    - type: "businessDefinition"
      url: "https://docs.example.com/dashboards/retail-performance"
      description: "Dashboard user guide and KPI definitions"
